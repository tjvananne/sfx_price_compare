CREATE TABLE `sfxpricecomp`.`asin_stage01` (
  `ASIN` VARCHAR(12) NOT NULL,
  `Product_Title` VARCHAR(200) NOT NULL,
  `Product_Brand` VARCHAR(40) NOT NULL,
  `Product_Price` INT UNSIGNED NOT NULL COMMENT 'shouldn\'t allow negative values, so unsigned should be best here',
  `Currency_Code` VARCHAR(5) NOT NULL,
  `Epoch_Time` INT UNSIGNED NOT NULL,
  `Reviews_URL` VARCHAR(350) NULL DEFAULT NULL,
  `Product_Model` VARCHAR(50) NULL DEFAULT NULL,
  `Package_Quantity` INT UNSIGNED NULL DEFAULT NULL COMMENT 'no negatives - using unsigned',
  `Product_Type` VARCHAR(45) NULL DEFAULT NULL,
  `Product_Feature1` VARCHAR(500) NULL DEFAULT NULL,
  `Product_Feature2` VARCHAR(500) NULL DEFAULT NULL,
  `Product_Feature3` VARCHAR(500) NULL DEFAULT NULL,
  `Product_Feature4` VARCHAR(500) NULL DEFAULT NULL,
  `Product_Feature5` VARCHAR(500) NULL DEFAULT NULL,
  `Dim_Height` INT UNSIGNED NULL DEFAULT NULL,
  `Dim_Length` INT UNSIGNED NULL DEFAULT NULL,
  `Dim_Width` INT UNSIGNED NULL DEFAULT NULL,
  `Dim_Weight` INT UNSIGNED NULL DEFAULT NULL,
  `Dim_Height_Units` VARCHAR(45) NULL DEFAULT NULL,
  `Dim_Length_Units` VARCHAR(45) NULL DEFAULT NULL,
  `Dim_Width_Units` VARCHAR(45) NULL DEFAULT NULL,
  `Dim_Weight_Units` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`ASIN`))
COMMENT = 'Staging table - not sure yet if these are the ASINs that we want to target for SFX price history. I\'ll either want to do binary clasification on whether it\'s a guitar pedal or multi-classification based on what type of accessory it is. Maybe even multi classification on what type of guitar pedal?\n\nThis is my first attempt at this, so it probably isn\'t as efficient as it could be. I\'ll make second iterations of this table to test out other parameters (most importantly the data type sizes)';
